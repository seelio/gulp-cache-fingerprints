// Generated by CoffeeScript 1.9.1
(function() {
  var Git, WError, nodegit;

  nodegit = require("nodegit");

  WError = require("verror").WError;

  Git = (function() {
    function Git(options) {
      this.options = options;
    }

    Git.prototype.initialize = function(done) {
      return nodegit.Repository.open(this.options.root).then((function(_this) {
        return function(repo) {
          _this.repo = repo;
          return _this.repo.head();
        };
      })(this)).then((function(_this) {
        return function(ref) {
          var hashOfHEAD;
          hashOfHEAD = ref.target().toString();
          return _this.repo.getCommit(hashOfHEAD);
        };
      })(this)).then((function(_this) {
        return function(commit) {
          _this.commit = commit;
          return (function() {})();
        };
      })(this))["catch"](function(err) {
        return done(new WError(err, "couldn't load directory as git repository"));
      }).done(function() {
        return done();
      });
    };

    Git.prototype.getFile = function(filepath, done) {
      var found, notFound;
      found = function(entry) {
        return done(null, entry);
      };
      notFound = function(err) {
        return done(err);
      };
      return this.commit.getEntry(filepath).then(found, notFound);
    };

    Git.prototype.abspathToWorkingDir = function() {
      return this.repo.path().replace(new RegExp("\.git/?$"), "");
    };

    return Git;

  })();

  module.exports = Git;

}).call(this);
