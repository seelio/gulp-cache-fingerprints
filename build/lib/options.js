// Generated by CoffeeScript 1.8.0
(function() {
  var Options,
    __hasProp = {}.hasOwnProperty;

  Options = (function() {
    function Options(userOptions) {
      var key, opts, value, _ref;
      this.userOptions = userOptions;
      this.options = {};
      this._setOptionsToDefaults();
      this._setOptionsWithUserOverrides();
      this._setOptionsThatAreStillBlank();
      _ref = this.options;
      for (key in _ref) {
        if (!__hasProp.call(_ref, key)) continue;
        value = _ref[key];
        opts = {
          value: value,
          writable: false,
          enumerable: true
        };
        Object.defineProperty(this, key, opts);
      }
      Object.freeze(this.options);
    }

    Options.prototype.defaults = {
      root: null,
      build: null,
      base: "public",
      output: ".fingerprint-cache.json"
    };

    Options.prototype._setOptionsThatAreStillBlank = function() {
      var _base;
      return (_base = this.options).build || (_base.build = this.options.root);
    };

    Options.prototype._setOptionsWithUserOverrides = function() {
      var key, val, _ref, _results;
      _ref = this.userOptions;
      _results = [];
      for (key in _ref) {
        if (!__hasProp.call(_ref, key)) continue;
        val = _ref[key];
        _results.push(this.options[key] = val);
      }
      return _results;
    };

    Options.prototype._setOptionsToDefaults = function() {
      var key, val, _ref, _results;
      _ref = this.defaults;
      _results = [];
      for (key in _ref) {
        if (!__hasProp.call(_ref, key)) continue;
        val = _ref[key];
        _results.push(this.options[key] = val);
      }
      return _results;
    };

    return Options;

  })();

  module.exports = Options;

}).call(this);
